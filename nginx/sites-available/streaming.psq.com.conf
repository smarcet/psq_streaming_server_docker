#server {
#    listen 80 default_server;
#    listen [::]:80 default_server ipv6only=on;
#    server_name psqstream.simular.app;

    #location / {
    #    rewrite ^ https://$host$request_uri? permanent;
    #}

    #for certbot challenges (renewal process)
    #location ~ /.well-known/acme-challenge {
    #    allow all;
    #    root /data/letsencrypt;
    #}
#}

server {

    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;
    #listen 443 ssl;
    #listen [::]:443 ssl ipv6only=on;

    #server_name psqstream.simular.app;
    client_max_body_size 128M;

    #ssl_certificate /etc/letsencrypt/live/psqstream.simular.app/fullchain.pem;
    #ssl_certificate_key /etc/letsencrypt/live/psqstream.simular.app/privkey.pem;
    #ssl_trusted_certificate /etc/letsencrypt/live/psqstream.simular.app/fullchain.pem;

    #include /etc/nginx/snippets/letsencrypt.conf;

    location /stat {
        rtmp_stat all;
        rtmp_stat_stylesheet stat.xsl;
    }

    location /stat.xsl {
	    root /git/nginx-rtmp-module;
    }

    location /control{
	    rtmp_control all;
    }

    location /time {
        add_header Cache-Control no-cache; # Prevent caching of HLS fragments
        add_header Access-Control-Allow-Origin *;
	    return 200;
    }

    location /hls {
        # Serve HLS fragments
        types {
            application/vnd.apple.mpegurl m3u8;
            video/mp2t ts;
        }

	    root /mnt/;
        add_header Cache-Control no-cache; # Prevent caching of HLS fragments
        add_header Access-Control-Allow-Origin *;
    }

    location /dash {
        # Serve DASH fragments
	    root /mnt/;
        add_header Cache-Control no-cache; # Prevent caching of HLS fragments
        add_header Access-Control-Allow-Origin *;
    }

}
